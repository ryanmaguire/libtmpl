#ifndef TMPL_ERF_RAT_REMEZ_DOUBLE_H
#define TMPL_ERF_RAT_REMEZ_DOUBLE_H

#include <libtmpl/include/tmpl_config.h>

/*  Coefficients for the numerator of the Remez rational approximation.       */
#define P00 (+1.1283791670955126365607040611486440894548731064430E+00)
#define P01 (+6.1856680806948109220677660264677907003149751444417E-02)
#define P02 (+4.1145518213074999565262794018611561200627595655126E-02)
#define P03 (-8.7707136933607770079319073352925173083333681109000E-04)
#define P04 (+2.7125577380014977514418180966266226228905135708230E-04)
#define P05 (-1.3239722107678831460532410663306244658302355190564E-05)
#define P06 (+6.2564335958048129592868311685179924773329314231658E-07)
#define P07 (-1.8239148907346264717934021446679328630982359872721E-08)
#define P08 (+2.5839003238848066077920003511476230831774264021355E-10)

/*  Coefficients for the denominator of the Remez rational approximation.     */
#define Q00 (+1.0000000000000000000000000000000000000000000000000E+00)
#define Q01 (+3.8815238938359424075188631415877534713061633081189E-01)
#define Q02 (+6.5848395896534329559179312445593670161084460771079E-02)
#define Q03 (+6.1664659079696183164995589642551932095328093191702E-03)
#define Q04 (+3.2313713982428331981430572957719222195415860127493E-04)
#define Q05 (+7.7253055534510380898965062146051908309590150561640E-06)

#define TMPL_NUM_EVAL(z)\
P00+z*(P01+z*(P02+z*(P03+z*(P04+z*(P05+z*(P06+z*(P07+z*P08)))))))

#define TMPL_DEN_EVAL(z) Q00+z*(Q01+z*(Q02+z*(Q03+z*(Q04+z*Q05))))

TMPL_STATIC_INLINE
double tmpl_Double_Erf_Rat_Remez(double x)
{
    const double x2 = x*x;
    const double p = TMPL_NUM_EVAL(x2);
    const double q = TMPL_DEN_EVAL(x2);
    return x * p / q;
}

#undef TMPL_NUM_EVAL
#undef TMPL_DEN_EVAL
#undef P00
#undef P01
#undef P02
#undef P03
#undef P04
#undef P05
#undef P06
#undef P07
#undef P08
#undef Q00
#undef Q01
#undef Q02
#undef Q03
#undef Q04
#undef Q05

#endif
