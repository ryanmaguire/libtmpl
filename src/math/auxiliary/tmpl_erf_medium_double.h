/******************************************************************************
 *                                  LICENSE                                   *
 ******************************************************************************
 *  This file is part of libtmpl.                                             *
 *                                                                            *
 *  libtmpl is free software: you can redistribute it and/or modify           *
 *  it under the terms of the GNU General Public License as published by      *
 *  the Free Software Foundation, either version 3 of the License, or         *
 *  (at your option) any later version.                                       *
 *                                                                            *
 *  libtmpl is distributed in the hope that it will be useful,                *
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 *  GNU General Public License for more details.                              *
 *                                                                            *
 *  You should have received a copy of the GNU General Public License         *
 *  along with libtmpl.  If not, see <https://www.gnu.org/licenses/>.         *
 ******************************************************************************/
#ifndef TMPL_ERF_MEDIUM_DOUBLE_H
#define TMPL_ERF_MEDIUM_DOUBLE_H

#include <libtmpl/include/tmpl_config.h>
#include <libtmpl/include/types/tmpl_ieee754_double.h>

#if TMPL_HAS_IEEE754_DOUBLE == 1

static double tmpl_erfdm_coeffs[128] = {
    +8.5527181044291706341842573336570483782603345586101E-01,
    +3.8957677365552827675739629015746158691796628135819E-01,
    -4.0175104783348495249699389401059938465658318985319E-01,
    +1.4634492083197731003005357586150779752044845945097E-01,
    +5.8457922395742666510554462658988531604967359845085E-02,
    -6.8017363862137341361590600319900160790148084866830E-02,
    +7.7819383606707012080346890592685846788465816737892E-03,
    +1.3895203446953405733883984993580498390245349391919E-02,
    +8.7808757515181005003318884486712700942561069899954E-01,
    +3.4112482093974112443926377569169980259030116475790E-01,
    -3.7310527290420885958230974597972691441151133119560E-01,
    +1.5834765451138451307338890706844555089253537652800E-01,
    +3.7772057741254056462573311293033467589311059408432E-02,
    -6.4029567343721267983577262070150074651069603657940E-02,
    +1.3260091495510777151646985907703805956571020031109E-02,
    +1.1096174304116528239822627661329833282940690349179E-02,
    +8.9798960920701783199771642713021914368802282388455E-01,
    +2.9637438049741344869883423082530260604160901561977E-01,
    -3.4268287745154896665430134766876802782253376628930E-01,
    +1.6535992453544701227845885802212513549045417147485E-01,
    +1.8628926689940311924550299623327445586495612936439E-02,
    -5.8223852860335988626923816086499532737397520509917E-02,
    +1.7460856735456458902047449940384214096808819342958E-02,
    +8.0907446019043740278602259711225114525712118014326E-03,
    +9.1521500387173229222751568284767880910662494924563E-01,
    +2.5549068578278904640706027628664105238860669430274E-01,
    -3.1137927329914828377186601381753546831436293616283E-01,
    +1.6783209762734663499234621334565187678103020394527E-01,
    +1.5204136452576904733438118464178997885056414529724E-03,
    -5.1090829019319899955747285611563469034583725671447E-02,
    +2.0338673135925622898432756896776143769600365885829E-02,
    +5.0799287041612834570377519873667911717794429821899E-03,
    +9.3000779678611952974916418839936086512619366104357E-01,
    +2.1853276425487750904734722984872632601535457525562E-01,
    -2.7999510420282199106597647845690347798358513056539E-01,
    +1.6631823008801738551213999472404267162995511388308E-01,
    -1.3215908295572571960159937520356827865740557544495E-02,
    -4.3122315207678773762469629324978289416681156797461E-02,
    +2.1930488209072286376018980483785416863361297278467E-02,
    +2.2380923311188442812712962890019920754022711891498E-03,
    +9.4261272724427844039460323248557222371902217123663E-01,
    +1.8546634817174803644604384700303248606787667419605E-01,
    -2.4922040535687720357763965667789769197593111262899E-01,
    +1.6143783040832921519859144990860975536182014397028E-01,
    -2.5392568267234715447452831848772217283951229278792E-02,
    -3.4782843843264249919691699759325485351192403269656E-02,
    +2.2342012635230545106328511277699276255920135400712E-02,
    -2.9591813767810292319502412809400427108651691819197E-04,
    +9.5326985102802303553263465551864932416969706557572E-01,
    +1.5617832355458151879418776382851929429821884518289E-01,
    -2.1962576749951546406531927605008416743448377746111E-01,
    +1.5383971584623850017148059191426694288568753041177E-01,
    -3.4959956504606779128310561331110641506017520510194E-02,
    -2.6486940207151636219760500980439742326438310703702E-02,
    +2.1730979224549348064330281188397756477899315366231E-02,
    -2.4235963989803087198153170049306671120933593167686E-03,
    +9.6221008419949120060788837389153420624458866206966E-01,
    +1.3049187367280622842742303691599691078815624155598E-01,
    -1.9165993945759648315880994963411478879018468829735E-01,
    +1.4416973282846870533336205967635621114280067413732E-01,
    -4.1987997668106353340564865306630302908314738583387E-02,
    -1.8582972848182503650654300161371481316269265532601E-02,
    +2.0289154508848230595907376211190746339323330116765E-02,
    -4.0877171758265528784223553825709391041949975039322E-03,
    +9.6965169513984223161957429314066981362975655439739E-01,
    +1.0818156296067473426464302302738024620861042728662E-01,
    -1.6565301828397242965648239678587005979136528106080E-01,
    +1.3304360184531704637624608154429941468154820034940E-01,
    -4.6643832652033155008434181811080237218904107615060E-02,
    -1.1343735139737490813016040941031799664632915662818E-02,
    +1.8224700433442652512428894403047622420714052148813E-02,
    -5.2699017957795806464453339953411485156907908327045E-03,
    +9.7579772059009135517131055451754493150161833593768E-01,
    +8.8987726356669476128166139026066330400238868533907E-02,
    -1.4182418888117212359556782900755668088778556289985E-01,
    +1.2102562523476485142358385708636216389079840900996E-01,
    -4.9167564303191999580493075712509911756475917374347E-02,
    -4.9633676880240891777283194495514929475373820421205E-03,
    +1.5746207827299132722036329332053419204150172490265E-02,
    -5.9855468275531194217892861703619827443994184174881E-03,
    +9.8083424596655095306777401604168224172057475174978E-01,
    +7.2629665503254745521269795048743998912448429486758E-02,
    -1.2029288348981133241508667917624358431639949783927E-01,
    +1.0861350368635909679722709135660313762057012556530E-01,
    -4.9847929675949192324963870975600001739097186864852E-02,
    +4.4019983703039966067062322735988582295792488366209E-04,
    +1.3049369556412523250576815822964512873731791068317E-02,
    -6.2769801125107421582951732789340093177867539157261E-03,
    +9.8492946350821115003039769852462901704547462625915E-01,
    +5.8817295576895754216133227332198017891962541283585E-02,
    -1.0109222677268314647446008410759592435050603299199E-01,
    +9.6229077985507313884515654023285040382118560364641E-02,
    -4.8999455514873760465116418864243703567017747033696E-02,
    +4.8183998277328599096968482068137843362416984249804E-03,
    +1.0306873821769804201526893153273692782442602862907E-02,
    -6.2057066792509387627274287086202201003484053387709E-03,
    +9.8823340391229523728076253922054415615731614621998E-01,
    +4.7261024719377489816038531118010913533773587490975E-02,
    -8.4183700281167636261384997936466355110443186180820E-02,
    +8.4214469178158648674212473238523567588104967148548E-02,
    -4.6942279329523642638004656396400411904008478812421E-02,
    +8.1820309657249208079417614165469618737824174195833E-03,
    +7.6617364434261134277261171962881969495728756409568E-03,
    -5.8446089337757519877749150720151250777799361580491E-03,
    +9.9087822750686266853870699611387903171634279308229E-01,
    +3.7679774086816625142442936215913820783238264471457E-02,
    -6.9472083472263377152814043564770502651932726884082E-02,
    +7.2832844573047355545625265749413725925011980513492E-02,
    -4.3985418994228557667694539291275619545609463926156E-02,
    +1.0589391056510114387418713091223632839481045486153E-02,
    +5.2239398178048382530902416508738618867248049032610E-03,
    -5.2706825347287808131184705343255826599780300971488E-03,
    +9.9297895874393467433685273683743197848148647827017E-01,
    +2.9807154664801713755718118496639520862729239852553E-02,
    -5.6819888579425854926333658360823946505310737389459E-02,
    +6.2272890181996038791992000083348126315424209988167E-02,
    -4.0413887399705597746885234519002905008527846411233E-02,
    +1.2133720285038686939430561775090239850854700872598E-02,
    +3.0700262639602059830187964648415366544500945157484E-03,
    -4.5588878588141048546268478057702624502295250898777E-03,
    +9.9463455163389427524125751688704786228247773241283E-01,
    +2.3395903761608299427218176639529215206811754517063E-02,
    -4.6060685530295856265337820289454328269625284949239E-02,
    +5.2656015171791332185021476171698704024614841421177E-02,
    -3.6479704988627622214850800722563500788977123391836E-02,
    +1.2930961629160472457780274953285597538937337782533E-02,
    +1.2450870972685060593463989382738268534978154730896E-03,
    -3.7773703332047901259364963205798228384918311253423E-03
};

#define A00 (tmpl_erfdm_coeffs[n])
#define A01 (tmpl_erfdm_coeffs[n+1])
#define A02 (tmpl_erfdm_coeffs[n+2])
#define A03 (tmpl_erfdm_coeffs[n+3])
#define A04 (tmpl_erfdm_coeffs[n+4])
#define A05 (tmpl_erfdm_coeffs[n+5])
#define A06 (tmpl_erfdm_coeffs[n+6])
#define A07 (tmpl_erfdm_coeffs[n+7])
#define TMPL_POLY_EVAL(z)\
A00 + z*(A01 + z*(A02 + z*(A03 + z*(A04 + z*(A05 + z*(A06 + z*A07))))))

TMPL_STATIC_INLINE
double tmpl_Double_Erf_Medium(tmpl_IEEE754_Double w)
{
    tmpl_IEEE754_Double shift;
    const unsigned int n = (unsigned int)(w.bits.man0) << 3U;
    shift = w;
    shift.bits.man1 = 0x8000U;
    shift.bits.man2 = 0x0000U;
    shift.bits.man3 = 0x0000U;
    w.r -= shift.r;

    return TMPL_POLY_EVAL(w.r);
}

#else
/*  Else for #if TMPL_HAS_IEEE754_DOUBLE == 1.                                */


/*  Coefficients for the numerator of the Remez rational approximation.       */
#define A00 (+1.1283791670955126365607040611486440894548731064430E+00)
#define A01 (+6.1856680806948109220677660264677907003149751444417E-02)
#define A02 (+4.1145518213074999565262794018611561200627595655126E-02)
#define A03 (-8.7707136933607770079319073352925173083333681109000E-04)
#define A04 (+2.7125577380014977514418180966266226228905135708230E-04)
#define A05 (-1.3239722107678831460532410663306244658302355190564E-05)
#define A06 (+6.2564335958048129592868311685179924773329314231658E-07)
#define A07 (-1.8239148907346264717934021446679328630982359872721E-08)
#define A08 (+2.5839003238848066077920003511476230831774264021355E-10)

/*  Coefficients for the denominator of the Remez rational approximation.     */
#define B00 (+1.0000000000000000000000000000000000000000000000000E+00)
#define B01 (+3.8815238938359424075188631415877534713061633081189E-01)
#define B02 (+6.5848395896534329559179312445593670161084460771079E-02)
#define B03 (+6.1664659079696183164995589642551932095328093191702E-03)
#define B04 (+3.2313713982428331981430572957719222195415860127493E-04)
#define B05 (+7.7253055534510380898965062146051908309590150561640E-06)

#define TMPL_NUM_EVAL(z)\
A00+z*(A01+z*(A02+z*(A03+z*(A04+z*(A05+z*(A06+z*(A07+z*A08)))))))

#define TMPL_DEN_EVAL(z) B00+z*(B01+z*(B02+z*(B03+z*(B04+z*B05))))

TMPL_STATIC_INLINE
double tmpl_Double_Erf_Medium(double x)
{
    const double x2 = x*x;
    const double p = TMPL_NUM_EVAL(x2);
    const double q = TMPL_DEN_EVAL(x2);
    return x * p / q;
}

#endif
/*  End of #if TMPL_HAS_IEEE754_DOUBLE == 1.                                  */

#include "tmpl_math_undef.h"

#endif
/*  End of include guard.                                                     */
