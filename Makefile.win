#   Choose whatever C compiler you want. Tested with gcc, clang, tcc, and pcc
#   on GNU/Linux (Debian, Ubuntu, Fedora, and more) and FreeBSD 12.1.
CC = cl

# Name of the created .dll file.
DLLNAME = libtmpl.dll

#   Compiler arguments.
#   /O2 is optimization for faster code.
#   /c means compiles without linking.
#   /I../ means include the parent directory so libtmpl/ is in the path.
#   /GL is link time optimization.
CARGS = /O2 /c /I../ /GL

# Linking arguments.
LARGS = /DLL /O2 /I../ /LTCG /OUT $(DLLNAME)

# Name of the header file containing endianness info. We need to create this.
END_HEADER = include/tmpl_endianness.h

# C file for determining endianness and creating END_HEADER.
DET_END_FILE = ./det_end.c

# Name of the executable create by DET_END_FILE.
DET_END_EXEC = det_end.exe

#   Location of source files for all sub-libraries.
SRCS_MATH = ./src/math/*.c
SRCS_BYTE = ./src/bytes/*.c
SRCS_CMPL = ./src/complex/*.c
SRCS_EUC2 = ./src/euclidean_planar_geometry/*.c
SRCS_IEEE = ./src/ieee754/*.c
SRCS_LINK = ./*.o

all: make

make:
	make clean
	make determine_endianness
	make compile
	make link
	make clean

clean:
	del  *.dll *.obj *.o
	!if exists($(END_HEADER))
		@del $(END_HEADER)

determine_endianness:
	$(CC) $(DET_END_FILE)
	./$(DET_END_EXEC)
	del $(DET_END_EXEC)
	del *.obj *.o

compile:
	if !($(CC) $(CARGS) $(SRCS_MATH)); then exit 1; fi
	if !($(CC) $(CARGS) $(SRCS_CMPL)); then exit 1; fi
	if !($(CC) $(CARGS) $(SRCS_BYTE)); then exit 1; fi
	if !($(CC) $(CARGS) $(SRCS_EUC2)); then exit 1; fi
	if !($(CC) $(CARGS) $(SRCS_IEEE)); then exit 1; fi

link:
	if !($(CC) $(SRCS_LINK) $(LARGS)); then exit 1; fi

